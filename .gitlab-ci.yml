before_script:
  - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  - apt-get update -yq && apt-get install -y lintian libprotobuf-dev protobuf-compiler

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GET_SOURCES_ATTEMPTS: 3

#########################
# Templates using anchors
#########################
.amd64_trusty_t: &amd64_trusty_job
  image: registry.roboception.de/tools/docker_images:buildimage
  tags:
    - amd64
    - docker

.armhf_trusty_t: &armhf_trusty_job
  image: registry.roboception.de/tools/docker_images:armhf-buildimage
  tags:
    - armhf
    - docker

.amd64_xenial_t: &amd64_xenial_job
  image: registry.roboception.de/tools/docker_images:xenial-buildimage
  tags:
    - amd64
    - docker

.armhf_xenial_t: &armhf_xenial_job
  image: registry.roboception.de/tools/docker_images:armhf-xenial-buildimage
  tags:
    - armhf
    - docker

.amd64_bionic_t: &amd64_bionic_job
  image: registry.roboception.de/tools/docker_images:bionic-buildimage
  tags:
    - amd64
    - docker

#############
# Templates
#############
.test:
  stage: test
  script:
    - mkdir build && cd build
    - cmake ..
    - make -j 4
    - CTEST_OUTPUT_ON_FAILURE=1 make test

# Debian packaging
.package:
  stage: deploy
  script:
    - mkdir build && cd build
    - if [ -n "$ROS_DISTRO" ]; then
        cmake -DCATKIN_BUILD_BINARY_PACKAGE="1" -DCMAKE_INSTALL_PREFIX="/opt/ros/$ROS_DISTRO" -DCMAKE_PREFIX_PATH="/opt/ros/$ROS_DISTRO" -DCMAKE_BUILD_TYPE=Release .. ;
      else
        cmake .. ;
      fi
    - make -j 4
    - make package
    - if [ -z "$APT_REPO" ]; then export APT_REPO=testing; fi
    - upload_deb.sh $DISTRO_CODENAME-$APT_REPO *.deb

.package_testing:
  extends: .package
  only:
    - master
  variables:
    APT_REPO: "testing"

.package_stable:
  extends: .package
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches
  variables:
    APT_REPO: "stable"

##############
#### Jobs ####
##############
gen_dox:
  <<: *amd64_bionic_job
  stage: deploy
  script:
    - apt-get install -y doxygen ncftp
    - mkdir build && cd build
    - cmake ..
    - make doc
    - upload_dox.sh doc/html
  only:
    - master
    - tags
  tags:
    - docs

################
# Testing builds
################

# Test (on every commit)
########################
test:trusty:amd64:
  <<: *amd64_trusty_job
  extends: .test

test:trusty:armhf:
  <<: *armhf_trusty_job
  extends: .test

test:xenial:amd64:
  <<: *amd64_xenial_job
  extends: .test

test:xenial:armhf:
  <<: *armhf_xenial_job
  extends: .test

test:bionic:amd64:
  <<: *amd64_bionic_job
  extends: .test

# Deploy testing (only on master)
#################################
package_testing:trusty:amd64:
  <<: *amd64_trusty_job
  extends: .package_testing

package_testing:trusty:armhf:
  <<: *armhf_trusty_job
  extends: .package_testing

package_testing:xenial:amd64:
  <<: *amd64_xenial_job
  extends: .package_testing

package_testing:xenial:armhf:
  <<: *armhf_xenial_job
  extends: .package_testing

package_testing:bionic:amd64:
  <<: *amd64_bionic_job
  extends: .package_testing

################
# Stable builds
################

# Deploy stable (only for releases, version tags)
#################################################
package_stable:trusty:amd64:
  <<: *amd64_trusty_job
  extends: .package_stable

package_stable:trusty:armhf:
  <<: *armhf_trusty_job
  extends: .package_stable

package_stable:xenial:amd64:
  <<: *amd64_xenial_job
  extends: .package_stable

package_stable:xenial:armhf:
  <<: *armhf_xenial_job
  extends: .package_stable

package_stable:bionic:amd64:
  <<: *amd64_bionic_job
  extends: .package_stable

########################
# package as ROS package
########################

ros_testing:melodic:amd64:
  image: ros:melodic-perception
  tags:
    - amd64
    - docker
  extends: .package_testing

ros_stable:melodic:amd64:
  image: ros:melodic-perception
  tags:
    - amd64
    - docker
  extends: .package_stable
